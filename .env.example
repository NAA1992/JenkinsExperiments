# Makefile заменяет значение, беря его из ./src/release.yaml
VERSION_ATOM=1.0.13
# ощущение, что нигде не используется, а потому любое значение может быть
ENV=example
# TENANT влияет на "какую иконку использовать". И еще на много что завязан
# Берет в файл с названием netbox_logo_$(TENANT).svg
# Все возможные иконки посмотреть ls ./src/static/netbox_logo*.svg
# prod b2b dev qa
TENANT=dev
# True = позволяет создавать новые миграции базы данных
DEVELOPER=True
# True если DEVELOPER=True, иначе будет выскакивать предупреждение WARNING на страницах
DEBUG=True

# Путь, где будут созданы подкаталоги, которые будут прокинуты в контейнеры. В конце без слеша
LOCALPATH_CONTAINER_VOLUMES="${HOME}/${TENANT}_atom_container_volumes"

# Порты
 # порт для PostgreSQL
PUBLIC_DB_PORT=5432
# порт для ATOM / NetBox
PUBLIC_APP_PORT=80
# порт для pgAdmin
PGADMIN_LISTEN_PORT=5050


# REDIS
REDIS_CACHE_HOST=redis-cache
REDIS_CACHE_PASSWORD=netbox
REDIS_DATABASE=0
REDIS_HOST=redis
REDIS_PASSWORD=netbox

# Database PostgreSQL
DB_HOST=postgres
DB_NAME=netbox
DB_PASSWORD=netbox
DB_USER=netbox

# pgAdmin
# EMAIL обязателен
PGADMIN_DEFAULT_EMAIL=pgadmin@digitalms.ru
# Локально созданный пароль для PGADMIN. Makefile создает, если нет и засовывает DB_PASSWORD
LOCAL_PGADMIN_PASSWORD_FILE="${LOCALPATH_CONTAINER_VOLUMES}/.pgadminpassword"
# Пароль где находится внутри контейнера для PGADMIN
PGADMIN_DEFAULT_PASSWORD_FILE="/opt/pgadmin/password"
# Локальное хранилище данных pgAdmin, прокидывается до /var/lib/pgadmin внутри контейнера
LOCAL_PGADMIN_DATA="${LOCALPATH_CONTAINER_VOLUMES}/pgadmin"
# ??? Неизвестно где используется
SCRIPT_NAME=/pgadmin4
# PGADMIN_CONFIG_CONFIG_DATABASE_URI="'postgresql://netbox:netbox@atom_postgres_1:5432/netbox'"

# DrawIO
DRAWIO_RENDERER_HOST=drawio-renderer

# Настройки ATOM
# Местонахождение логов локально
LOCAL_ATOM_LOGS="${LOCALPATH_CONTAINER_VOLUMES}/atom-logs/"
# Включает GraphQL API по адресу /graphql
GRAPHQL_ENABLED=true
# включает prometheus, default = false (see ./configuration/configuration.py or ./src/settings.py)
METRICS_ENABLED=false

# создает user'a если false, default user\password is admin@example.com\admin
SKIP_SUPERUSER=true
SUPERUSER_EMAIL=example@domain.ru
SUPERUSER_NAME=admin
SUPERUSER_PASSWORD=admin
# если создавать superuser, надо заменить токен
SUPERUSER_API_TOKEN='0123456789abcdef0123456789abcdef01234567'

# используется в custom скрипте entrypoint-atom.sh , который помещается внутрь ATOM
DB_WAIT_DEBUG=1

# Нижняя часть главной страницы
SUBJECT_EMAIL='Обратная связь по ATOM'
SUPPORT_EMAIL=example@domain.ru
SUPPORT_TELEGRAM=example_telegram

# Слева меню "Проектный офис" -> "Системы". Создать систему и указать здесь созданный ID
DEFAULT_SYSTEM=1

# Слева меню "Организация" -> "Список ролей". Создать роль МЗ и указать здесь созданный ID
MINZDRAV_CURATOR_CONTACT_ROLE_ID=1

# Слева меню "Admin" -> "Группы". Создать группу администратор АТОМ и указать здесь ее наименование
ATOM_ADMIN_GROUP_NAME="0 Администратор АТОМ"

# авторизация по LDAP
REMOTE_AUTH_ENABLED=false
# LDAP URL
AUTH_LDAP_SERVER_URI=""
# LDAP пароль
AUTH_LDAP_BIND_PASSWORD=""
# игнорировать ли ошибки сертификатов
LDAP_IGNORE_CERT_ERRORS=true

# Правила отбора пользователей, групп и пр.
AUTH_LDAP_GROUP_SEARCH_BASEDN=""
AUTH_LDAP_USER_SEARCH_BASEDN=""
AUTH_LDAP_USER_SEARCH_FILTER=""
AUTH_LDAP_BIND_DN=""

# Эти настройки определяют список источников, которым разрешено делать запросы кросс-сайтового API. Используйте
# `CORS_ORIGIN_WHITELIST` для определения списка точных имен хостов или `CORS_ORIGIN_REGEX_WHITELIST` для определения набора регулярных
# выражений. (Эти настройки не действуют, если `CORS_ORIGIN_ALLOW_ALL` имеет значение True.) Например:
#
# ```python
# CORS_ORIGIN_WHITELIST = [
# 'https://example.com',
# ]
# ```
# Настройки API Cross-Origin Resource Sharing (CORS). Если CORS_ORIGIN_ALLOW_ALL установлен в True, все источники будут
# разрешены. В противном случае определите список разрешенных источников с помощью CORS_ORIGIN_WHITELIST или
# CORS_ORIGIN_REGEX_WHITELIST. Для получения дополнительной информации см. https://github.com/ottoyiu/django-cors-headers
CORS_ORIGIN_ALLOW_ALL=True